trigger:
  branches:
    include:
      - main

variables:
  - group: AzureSecrets

jobs:
- job: terraformCI
  displayName: 'Terraform CI'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'AzureSub1'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Running Terraform Init"
        terraform init
    displayName: 'Terraform Init'

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'AzureSub1'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        terraform validate
    displayName: 'Terraform Validate'
    
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'AzureSub1'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        terraform plan -out=tfplan -input=false
    displayName: 'Terraform Plan'
    
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'AzureSub1'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        terraform apply -input=false tfplan
    displayName: 'Terraform Apply'

- job: terraformPR
  displayName: 'Terraform PR'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'AzureSub1'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Running Terraform Init"
        terraform init
    displayName: 'Terraform Init'
    
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'AzureSub1'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        terraform validate
    displayName: 'Terraform Validate'
    
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'AzureSub1'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        terraform plan -out=tfplan -input=false \
          -var "tenant_id=${tenantId}" \
          -var "sql_administrator_login=${sql_administrator_login}" \
          -var "sql_administrator_login_password=${sql_administrator_password}"
    displayName: 'Terraform Plan'
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/main'))